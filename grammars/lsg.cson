'scopeName': 'source.lsg'
'name': 'source.lsg'
'fileTypes': ['lsg']
'patterns': [
  {
    'begin': '^\\s*([`]{3,})\\s*([a-z]+([:\\-_][a-z]+)*)?$'
    'beginCaptures':
      '0':
        'name': 'support.gfm'
    'end': '^\\s*\\1\\s*$'
    'endCaptures':
      '0':
        'name': 'support.gfm'
    'name': 'string.code.lsg'
    'patterns': [
      {
        'include': 'source.html.basic'
      }
      {
        'include': 'source.lsg'
      }
      {
        'begin': '\\*\\*\\*(?!$|\\*|\\s)'
        'end': '\\*\\*\\*'
        'beginCaptures':
          '0':
            'name': 'highlight-start.lsg'
        'endCaptures':
          '0':
            'name': 'highlight-end.lsg'
        'name': 'highlight.lsg'
      }
    ]
  }
  {
    'begin': '^(@css)(?: ([^\\n]*[^\\{\\n:]))? *(:)$'
    'beginCaptures':
      '1':
        'name': 'support.function.lsg'
      '2':
        'name': 'punctuation.definition.parameters.lsg'
      '3':
        'name': 'support.function.lsg'
    'end': '^(?=```|$)'
    'name': 'none.lsg'
    'patterns': [
      {
        'include': 'source.css'
      }
    ]
  }
  {
    'begin': '^(@css)(?: ([^\\n]*[^\\{\\n:]))? *(\\{)$'
    'beginCaptures':
      '1':
        'name': 'support.function.lsg'
      '2':
        'name': 'punctuation.definition.parameters.lsg'
      '3':
        'name': 'support.function.lsg'
    'end': '^\\}$'
    'endCaptures':
      '0':
        'name': 'support.function.lsg'
    'name': 'none.css.lsg'
    'patterns': [
      {
        'include': 'source.css'
      }
    ]
  }
  {
    'begin': '^(@css)(?: ([^\\n]*[^\\{\\n:]))? *$'
    'beginCaptures':
      '1':
        'name': 'support.function.lsg'
      '2':
        'name': 'punctuation.definition.parameters.lsg'
      '3':
        'name': 'support.function.lsg'
    'end': '^(?=[^ \\n])'
    'name': 'none.css.lsg'
    'patterns': [
      {
        'include': 'source.css'
      }
    ]
  }
  {
    'begin': '^(@scss)(?: ([^\\n]*[^\\{\\n:]))? *(:)$'
    'beginCaptures':
      '1':
        'name': 'support.function.lsg'
      '2':
        'name': 'punctuation.definition.parameters.lsg'
      '3':
        'name': 'support.function.lsg'
    'end': '^(?=```|$)'
    'name': 'none.scss.lsg'
    'patterns': [
      {
        'include': 'source.scss'
      }
    ]
  }
  {
    'begin': '^(@scss)(?: ([^\\n]*[^\\{\\n:]))? *(\\{)$'
    'beginCaptures':
      '1':
        'name': 'support.function.lsg'
      '2':
        'name': 'punctuation.definition.parameters.lsg'
      '3':
        'name': 'support.function.lsg'
    'end': '^\\}$'
    'endCaptures':
      '0':
        'name': 'support.function.lsg'
    'name': 'none.scss.lsg'
    'patterns': [
      {
        'include': 'source.scss'
      }
    ]
  }
  {
    'begin': '^(@scss)(?: ([^\\n]*[^\\{\\n:]))? *$'
    'beginCaptures':
      '1':
        'name': 'support.function.lsg'
      '2':
        'name': 'punctuation.definition.parameters.lsg'
      '3':
        'name': 'support.function.lsg'
    'end': '^(?=[^ \\n])'
    'name': 'none.scss.lsg'
    'patterns': [
      {
        'include': 'source.scss'
      }
    ]
  }
  {
    'begin': '^(@sass)(?: ([^\\n]*[^\\{\\n:]))? *(:)$'
    'beginCaptures':
      '1':
        'name': 'support.function.lsg'
      '2':
        'name': 'punctuation.definition.parameters.lsg'
      '3':
        'name': 'support.function.lsg'
    'end': '^(?=```|$)'
    'name': 'none.sass.lsg'
    'patterns': [
      {
        'include': 'source.sass'
      }
    ]
  }
  {
    'begin': '^(@sass)(?: ([^\\n]*[^\\{\\n:]))? *(\\{)$'
    'beginCaptures':
      '1':
        'name': 'support.function.lsg'
      '2':
        'name': 'punctuation.definition.parameters.lsg'
      '3':
        'name': 'support.function.lsg'
    'end': '^\\}$'
    'endCaptures':
      '0':
        'name': 'support.function.lsg'
    'name': 'none.sass.lsg'
    'patterns': [
      {
        'include': 'source.sass'
      }
    ]
  }
  {
    'begin': '^(@sass)(?: ([^\\n]*[^\\{\\n:]))? *$'
    'beginCaptures':
      '1':
        'name': 'support.function.lsg'
      '2':
        'name': 'punctuation.definition.parameters.lsg'
      '3':
        'name': 'support.function.lsg'
    'end': '^(?=[^ \\n])'
    'name': 'none.sass.lsg'
    'patterns': [
      {
        'include': 'source.sass'
      }
    ]
  }
  {
    'begin': '^(@data)(?: ([^\\n]*[^\\{\\n:]))? *(:)$'
    'beginCaptures':
      '1':
        'name': 'support.function.lsg'
      '2':
        'name': 'punctuation.definition.parameters.lsg'
      '3':
        'name': 'support.function.lsg'
    'end': '^(?=$|```)'
    'name': 'none.css.lsg'
    'patterns': [
      {
        'include': 'source.yaml'
      }
      {
        'begin': '(?=\\{)'
        'end': '(?<=\\})'
        'include': 'source.json'
      }
    ]
  }
  {
    'begin': '^(@data)(?: ([^\\n]*[^\\{\\n:]))? *(?=\\{$)'
    'beginCaptures':
      '1':
        'name': 'support.function.lsg'
      '2':
        'name': 'punctuation.definition.parameters.lsg'
    'end': '(?<=^\\})$'
    'name': 'none.css.lsg'
    'patterns': [
      {
        'include': 'source.yaml'
      }
      {
        'begin': '(?=\\{)'
        'end': '(?<=\\})'
        'include': 'source.json'
      }
    ]
  }
  {
    'begin': '^(@data)(?: ([^\\n]*[^\\{\\n:]))? *'
    'beginCaptures':
      '1':
        'name': 'support.function.lsg'
      '2':
        'name': 'punctuation.definition.parameters.lsg'
    'end': '^(?=[^ \\n])'
    'name': 'none.css.lsg'
    'patterns': [
      {
        'include': 'source.yaml'
      }
      {
        'begin': '(?=\\{)'
        'end': '(?<=\\})'
        'include': 'source.json'
      }
    ]
  }
  {
    'begin': '^(@css)(?: ([^\\n]*[^\\{\\n:]))? *(\\{)$'
    'beginCaptures':
      '1':
        'name': 'support.function.lsg'
      '2':
        'name': 'string.argument.lsg'
      '3':
        'name': 'support.function.lsg'
    'end': '^\\}$'
    'endCaptures':
      '0':
        'name': 'support.function.lsg'
    'name': 'command.css.lsg'
    'patterns': [
      {
        'include': 'source.scss'
      }
    ]
  }
  {
    'begin': '^(@colors)(?: ([^\\n]*[^\\{\\n:]))? *(:)$'
    'beginCaptures':
      '1':
        'name': 'support.function.lsg'
      '2':
        'name': 'string.argument.lsg'
      '3':
        'name': 'support.function.lsg'
    'end': '^(?=$|```)'
    'endCaptures':
      '0':
        'name': 'support.function.lsg'
    'name': 'command.lsg'
    'patterns': [
      {
        'match': '\\$[\\w\\-_]+'
        'name': 'variable.other.value'
      }
    ]
  }
  {
    'begin': '^(@colors)(?: ([^\\n]*[^\\{\\n:]))? *(\\{)$'
    'beginCaptures':
      '1':
        'name': 'support.function.lsg'
      '2':
        'name': 'string.argument.lsg'
      '3':
        'name': 'support.function.lsg'
    'end': '^\\}$'
    'endCaptures':
      '0':
        'name': 'support.function.lsg'
    'name': 'command.lsg'
    'patterns': [
      {
        'match': '\\$[\\w\\-_]+'
        'name': 'variable.other.value'
      }
    ]
  }
  {
    'begin': '^(@colors)(?: ([^\\n]*[^\\{\\n:]))? *$'
    'beginCaptures':
      '1':
        'name': 'support.function.lsg'
      '2':
        'name': 'string.argument.lsg'
      '3':
        'name': 'support.function.lsg'
    'end': '^(?=[^ \\n])'
    'endCaptures':
      '0':
        'name': 'support.function.lsg'
    'name': 'command.lsg'
    'patterns': [
      {
        'match': '\\$[\\w\\-_]+'
        'name': 'variable.other.value'
      }
    ]
  }
  {
    'begin': '^(@[\\w\\-_]+)(?: ([^\\n]*[^\\{\\n:]))? *(:)$'
    'beginCaptures':
      '1':
        'name': 'support.function.lsg'
      '2':
        'name': 'string.argument.lsg'
      '3':
        'name': 'support.function.lsg'
    'end': '^(?=$|```)'
    'endCaptures':
      '0':
        'name': 'support.function.lsg'
    'name': 'command.lsg'
  }
  {
    'begin': '^(@[\\w\\-_]+)(?: ([^\\n]*[^\\{\\n:]))? *(\\{)$'
    'beginCaptures':
      '1':
        'name': 'support.function.lsg'
      '2':
        'name': 'string.argument.lsg'
      '3':
        'name': 'support.function.lsg'
    'end': '^\\}$'
    'endCaptures':
      '0':
        'name': 'support.function.lsg'
    'name': 'command.lsg'
  }
  {
    'begin': '^(@[\\w\\-_]+)(?: ([^\\n]*[^\\{\\n:]))? *$'
    'beginCaptures':
      '1':
        'name': 'support.function.lsg'
      '2':
        'name': 'string.argument.lsg'
      '3':
        'name': 'support.function.lsg'
    'end': '^(?=[^ \\n])'
    'endCaptures':
      '0':
        'name': 'support.function.lsg'
    'name': 'command.lsg'
  }
  {
    'match': '^(@[\\w\\d_-]+)(?: ([^\\n]*[^\\{\\n:]))?$'
    'captures':
      '1':
        'name': 'support.function.lsg'
      '2':
        'name': 'string.argument.lsg'
  }
  {
    'include': 'source.gfm'
  }
]
